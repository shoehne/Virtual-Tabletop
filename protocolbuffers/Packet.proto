syntax = "proto3";

package Virtual_Tt_Api;

// Universal packet header.
message PacketHeader {

    uint32 crc32 = 1;
    uint32 sequence = 2;
    uint32 packetType = 3;
}

// Variant of packetHeader that is used for fragmented packets.
// Fragments are used to send 2-5 fragments worth of information
// with a fire and forget process. It is not necessary that the 
// data actually arrives; useful for time critical data.
message FragmentPacket {

    PacketHeader header = 1;
    uint32 fragmentId = 2;
    uint32 fragmentAmount = 3;
}

// Variant of packetHeader that is used to send chunks of larger data.
// Chunks are used to send large amounts of data reliably.
message SlicePacket {

    PacketHeader header = 1;
    uint32 chunkId = 2;
    uint32 sliceId = 3;
    uint32 sliceSize = 4;
}

// sliceSize will be limited to 1024 bytes.
message ChatMessage {

    // message is intended to be fed a char array.
    repeated string message = 1;
}

message ConnectionHandling {

    uint32 connection = 1;
}

message Position {

    int32 OldPositionX = 1;
    int32 OldPositionY = 2;
    int32 OldPositionZ = 3;
    int32 NewPositionX = 4;
    int32 NewPositionY = 5;
    int32 NewPositionZ = 6;
}